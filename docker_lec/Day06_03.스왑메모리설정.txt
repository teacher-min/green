스왑 파일 생성

1. 기본 개념
  모든 프로그램은 메모리에 올려야 실행할 수 있습니다.
  메모리 공간이 부족한 경우 하드 디스크의 일부 영역을 메모리처럼 사용할 수 있습니다. (가상 메모리)
  하드 디스크의 가상 메모리 공간을 스왑메모리라고 합니다.

2. 아래 진행과정은 AWS 공식 홈페이지에서 발췌한 내용입니다.(https://repost.aws/ko/knowledge-center/ec2-memory-swap-file)

3. 진행과정
  1) dd 명령을 사용하여 루트 파일 시스템에 스왑 파일을 생성합니다. 명령에서 bs는 블록 크기이고 count는 블록 수입니다.
    스왑 파일의 크기는 dd 명령의 블록 크기 옵션에 count 옵션을 곱한 값입니다. 이 값을 조정하여 원하는 스왑 파일 크기를 결정합니다.
    지정한 블록 크기는 인스턴스의 사용 가능한 메모리보다 작아야 합니다. 그렇지 않으면 "memory exhausted" 오류가 발생합니다.
    이 dd 명령 예제에서 스왑 파일은 4GB(128MB x 32)입니다.
    $ sudo dd if=/dev/zero of=/swapfile bs=128M count=32   ## /dev/zero 파일을 읽어서 /swapfile 파일로 보낸다.
    ### 옵션
      if [File] = 지정한 파일을 입력대상으로 설정
        /dev/zero는 읽기를 위해 가능한 많은 널 문자(ASCII NUL, 0x00)를 제공하는 유닉스 계열 운영 체제의 특수 장치 파일이다.
       널 문자로 채워진, foobar라는 이름의 1 MiB 파일을 생성하려면: $ dd if=/dev/zero of=foobar count=1024 bs=1024 
      of [File] = 지정한 파일을 출력대상으로 설정
      bs [Bytes] = 한 번에 읽고 쓸 최대 바이트 크기 지정
      count [Number Blocks] = 지정한 블록 수 만큼 복사
  2) 스왑 파일의 읽기 및 쓰기 권한을 업데이트합니다.
    $ sudo chmod 600 /swapfile
  3) Linux 스왑 영역을 설정합니다.
    $ sudo mkswap /swapfile
  4) 스왑 공간에 스왑 파일을 추가하여 스왑 파일을 즉시 사용할 수 있도록 합니다.
    $ sudo swapon /swapfile
  5) 절차가 성공적으로 완료되었는지 확인합니다.
    $ sudo swapon -s
  6) 부팅 시 /etc/fstab 파일을 편집하여 스왑 파일을 시작합니다.
    $ sudo vi /etc/fstab
      파일 끝에 다음 새 줄을 추가하고 파일을 저장한 다음 종료합니다.
      /swapfile swap swap defaults 0 0
      입력 후 esc -> :wq